name: release

on:
  push:
    branches:
      - "main"

permissions:
  contents: write

jobs:
  release:
    name: release-${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-11

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.0

      - name: Build linux-amd64
        if: matrix.os == 'ubuntu-latest'
        run: ./build.sh "linux" "amd64" "bin/linux-amd64/csync"

      - name: Build windows-amd64
        if: matrix.os == 'ubuntu-latest'
        run: ./build.sh "windows" "amd64" "bin/windows-amd64/csync.exe"

      - name: Build darwin-amd64
        if: matrix.os == 'macos-11'
        run: ./build.sh "darwin" "amd64" "bin/darwin-amd64/csync"

      - name: Build darwin-arm64
        if: matrix.os == 'macos-11'
        run: ./build.sh "darwin" "arm64" "bin/darwin-arm64/csync"

      - name: Package linux-amd64
        if: matrix.os == 'ubuntu-latest'
        run: >
          tar -cv
          LICENSE README.md
          -C bin/linux-amd64/ csync
          | gzip --best
          > 'csync_linux-amd64.tar.gz'

      - name: Package windows-amd64
        if: matrix.os == 'ubuntu-latest'
        run: >
          tar -cv
          LICENSE README.md
          -C bin/windows-amd64/ csync
          | gzip --best
          > 'csync_windows-amd64.tar.gz'

      - name: Package darwin-amd64
        if: matrix.os == 'macos-11'
        run: >
          tar -cv
          LICENSE README.md
          -C bin/darwin-amd64/ csync
          | gzip --best
          > 'csync_darwin-amd64.tar.gz'

      - name: Package darwin-arm64
        if: matrix.os == 'macos-11'
        run: >
          tar -cv
          LICENSE README.md
          -C bin/darwin-arm64/ csync
          | gzip --best
          > 'csync_darwin-arm64.tar.gz'
