name: release

on:
  push:
    tags:
      - '*'

env:
  CARGO_INCREMENTAL: 0

permissions:
  contents: write

jobs:
  release:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl

          - os: macos-11
            target: x86_64-apple-darwin
          - os: macos-11
            target: aarch64-apple-darwin

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            rustflags: -C target-feature=+crt-static
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            rustflags: -C target-feature=+crt-static
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Setup cross
        uses: taiki-e/install-action@cross

      - name: Build binary [Cargo]
        if: matrix.os != 'ubuntu-latest'
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Build binary [Cross]
        if: matrix.os == 'ubuntu-latest'
        run: cross build --release --locked --target ${{ matrix.target }}

      - name: Package
        run: >
          tar -cv
          LICENSE README.md
          -C target/${{ matrix.target }}/release/ csync
          | gzip --best
          > 'csync_${{ matrix.target }}.tar.gz'

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: "*.tar.gz"

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "*.tar.gz"
